#ifndef CMDPARSER_H
#define CMDPARSER_H

#include "stdbool.h"
#include "stdint.h"

enum GE_COMMAND_SETS {
	SXCMD_IDN,
	SXCMD_IIC_XFER,
	SXCMD_SET_CAN,
	SXCMD_SET_RS485,

	SXCMD_SET_LED,
	SXCMD_CLEAR_LED,
	SXCMD_SET_FAN_SPEED,
	SXCMD_GET_FAN_SPEED,

	SXCMD_SET_VIF,
	SXCMD_SET_SXDO_OUTPUT,
	SXCMD_SET_SXDO, // 0xA
	SXCMD_GET_SXDO,
	SXCMD_GET_SXDI,

	SXCMD_SPI_XFER,
	SXCMD_SPI_ENABLE,
	SXCMD_SPI_DISABLE,
	SXCMD_SPI_OPTIONS, // 0x10


	SXDBGCMD_IDN=0x1000,
	SXDBGCMD_DEBUG,
	SXDBGCMD_REBOOT,
	SXDBGCMD_CODE_ID,
	SXDBGCMD_START_M4APP,

	SXDBGCMD_IAP_INIT,
	SXDBGCMD_IAP_ERASE,
	SXDBGCMD_IAP_PROGRAM,

	SXDBGCMD_START_M0APP,
	SXDBGCMD_STOP_M0APP,

	SXDBGCMD_IAP_PROGRAM_AES,
};


enum CMD_ERR_t{
    CMD_ERR_OK,
	CMD_ERR_FAIL,
    CMD_ERR_NOTSUPPORT
};

bool checkProtocol(uint8_t *pCmd, int cmdSize);
bool tcpCmdParser(uint8_t *pCmd, int cmdSize, uint8_t **retData, int *retSize);

#endif //CMDPARSER_H
